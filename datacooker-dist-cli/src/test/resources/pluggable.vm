<a id="pluggable/${efhc}${verb}.html"></a>
<h1>#foreach( $k in $kind )$k#if( $foreach.hasNext ), #end#end <code>${verb}</code></h1>
<p>${descr}</p>
#if( $keyBefore )<p>Applies keying <b>before</b> transform</p>#end

<h2>Input</h2>
#if( $input.examples != $null )
<p>Path examples:<br>#foreach( $path in $input.examples )<code>${path}</code><br>#end</p>
#if( $input.wildcard )<p>Supports <b>wildcard</b> DS creation</p>#end
#else
<table>
    <thead>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Description</th>
        <th>Optional</th>
    </tr>
    </thead>
    <tbody>
        #foreach( $inp in $input.streams.entrySet() )
        <tr>
            <td>#if( $inp.key == "" )Anonymous#else<code>"${inp.key}"</code>#end</td>
            <td>#foreach( $type in $inp.value.type.types )<code>${type}</code>#if( $foreach.hasNext ), #end#end</td>
            <td>${inp.value.descr}</td>
            <td>#if( $inp.value.optional )Yes#{else}Mandatory#end</td>
        </tr>
        #end
    </tbody>
</table>
#end

<h2>Parameters</h2>
#if( $definitions != $null )
<table>
    <thead>
    <tr>
        <th>Name or prefix</th>
        <th>Description</th>
        <th>Allowed values</th>
        <th>Defaults</th>
    </tr>
    </thead>
    <tbody>
        #foreach( $param in $definitions.entrySet() )
        <tr>
            <td><code>@${param.key}</code></td>
            <td>${param.value.descr}</td>
            <td>#if( $param.value.enumValues != $null )#foreach( $value in $param.value.enumValues.entrySet() )
                <code>${value.key}</code> — ${value.value}#if( $foreach.hasNext )
                    <br>#end#end#else<code>${param.value.friendlyType}</code>#end</td>
            <td>#if( $param.value.optional )#if( $param.value.defaults != $null )<code>${param.value.defaults}</code>
                — ${param.value.defDescr}#{else}Unset#end#elseif( $param.value.dynamic )Dynamic#{else}Mandatory#end</td>
        </tr>
        #end
    </tbody>
</table>
#else
<p>No parameters</p>
#end

<h2>Output</h2>
#if( $objLvls != $null )<p>#if( $reqObjLvl )<b>Requires</b>#{else}Supports#{end} attribute levels: #foreach( $l in $objLvls )<code>$l</code>#if( $foreach.hasNext ), #end#end</p>#end
#if( $output.examples != $null )
<p>Path examples:<br>#foreach( $path in $output.examples )<code>${path}</code><br>#end</p>
#else
<table>
    <thead>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Description</th>
        <th>Optional</th>
        <th>Ancestors</th>
        <th>Generated attributes</th>
    </tr>
    </thead>
    <tbody>
        #foreach( $out in $output.streams.entrySet() )
        <tr>
            <td>#if( $out.origin != $null)${out.origin} #end#if( $out.key == "" )Anonymous#else<code>"${out.key}"</code>#end</td>
            <td>#foreach( $type in $out.value.type.types )<code>${type}</code>#if( $foreach.hasNext ), #end#end</td>
            <td>${out.value.descr}</td>
            <td>#if( $out.value.optional )Yes#{else}Mandatory#end</td>
            <td>#if( $out.value.ancestors != $null )#foreach( $value in $out.value.ancestors )
                <code>"${value}"</code>#if( $foreach.hasNext ), #end#end#{else}All input#end</td>
            <td>#if( $out.value.generated != $null )#foreach( $value in $out.value.generated.entrySet() )
                <code>${value.key}</code> — ${value.value}#if( $foreach.hasNext )<br>#end#end#end</td>
        </tr>
        #end
    </tbody>
</table>
#end

#if( $example != $null )
<h2>Usage Example</h2>
<pre class="code">${example}</pre>
#end

<p>Back to <a href="package/${pkgName}.html">package</a>, to <a href="index.html">index</a></p>
